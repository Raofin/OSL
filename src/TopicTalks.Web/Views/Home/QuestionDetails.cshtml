@using TopicTalks.Web.Enums
@using TopicTalks.Web.Extensions
@using TopicTalks.Web.ViewModels
@model TopicTalks.Web.ViewModels.QuestionWithAnswersViewModel

@{
    var isCurrentUserTeacher = Context.UserRole() == nameof(RoleType.Teacher);
    var isCurrentUserAuthor = Context.UserId() == Model.UserInfo?.UserId.ToString();
    var authorEmail = Model.UserInfo?.Email ?? "Delete User";
    var authorId = Model.UserInfo?.UserId.ToString() ?? "0";

    void RenderAnswers(List<AnswerWithRepliesViewModel> answers, int marginLeft = 0)
    {
        foreach (var answer in answers)
        {
            var answerAuthorId = answer.UserInfo?.UserId.ToString() ?? "0";
            var answerAuthorEmail = answer.UserInfo?.Email ?? "Delete User";

            <div id="answer-@(answer.AnswerId) parent-@(answer.ParentAnswerId)" class="rounded border p-3 mb-3" style="margin-left: @(marginLeft)px;">
                <div class="d-flex justify-content-between">
                    <p><strong>@(answerAuthorEmail)</strong> on @($"{answer.CreatedAt:MMM dd, yyyy} ({answer.CreatedAt.TimeAgo()})")</p>
                    <div class="d-flex gap-2">
                        @if (Context.UserRole() == nameof(RoleType.Moderator) || answerAuthorId == Context.UserId())
                        {
                            <span class="link-text text-danger" onclick="deleteAnswer(@(answer.AnswerId))">Delete</span>
                            <span class="link-text text-success" onclick="appendInput(@(answer.QuestionId), @(answer.AnswerId), 'edit')">Edit</span>
                        }
                        @if (Context.UserRole() == nameof(RoleType.Teacher) || answerAuthorId == Context.UserId())
                        {
                            <span class="link-text" onclick="appendInput(@(answer.QuestionId), @(answer.AnswerId))">Reply</span>
                        }
                    </div>
                </div>
                <div class="form-group row">
                    <p id="explanation-@(answer.AnswerId)">@answer.Explanation</p>
                </div>
            </div>

            @if (answer?.Answers != null)
            {
                RenderAnswers(answer.Answers, marginLeft + 50);
            }
            else
            {
                marginLeft = 0;
            }
        }
    }
}

<div class="container mt-5">
    <div id="question-details" class="q-list-container">
        <div id="question-container">
            <div class="d-flex justify-content-between">
                @{
                    var edited = "";
                    if (Model.UpdatedAt != null)
                        edited = $"Edited at {Model.UpdatedAt?.ToString("MMM dd, yyyy")}";
                }
                <p><strong>@(authorEmail)</strong> <i id="edited-at">@edited</i></p>
                <p>@Model.CreatedAt.ToString("MMM dd, yyyy | hh:mm tt") (@Model.CreatedAt.TimeAgo())</p>
            </div>
            <div class="form-group row">
                <p id="explanation">@Model.Explanation</p>
            </div>
            <div class="d-flex justify-content-between">
                <div class="d-flex gap-2 topic">
                    @foreach (var topic in Model.Topic.SplitAndTrim())
                    {
                        <p>@topic</p>
                    }
                </div>
                <div class="d-flex gap-2">
                    @if (!Model.HasTeachersResponse && (Context.UserRole() == nameof(RoleType.Moderator) || authorId == Context.UserId()))
                    {
                        <span class="link-text text-danger" onclick="deleteQuestion(@Model.QuestionId)">Delete</span>
                    }
                    @if (Context.UserRole() == nameof(RoleType.Moderator) || authorId == Context.UserId())
                    {
                        <span class="link-text text-success" onclick="appendQuestionEditInput(@Model.QuestionId)">Edit</span>
                    }
                </div>
            </div>
        </div>

        <hr />

        <div id="answer-container">
            @{
                RenderAnswers(Model.Answers);
            }
        </div>

        @if (isCurrentUserTeacher || isCurrentUserAuthor)
        {
            <div id="answer-input" class="col-sm-9 w-100">
                <form id="answer-form" asp-action="PostAnswer" asp-controller="Home" method="post">
                    <div class="text-center w-100">
                        <textarea id="reply-text" class="form-control mb-2" rows="3" placeholder="Write your answer here" name="explanation"></textarea>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">Post Answer</button>
                    </div>
                </form>
            </div>
        }
    </div>
</div>

@section Scripts
{
    <script src="~/js/question-answer.js"></script>
}
