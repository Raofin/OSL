@using static TopicTalks.Web.Configs.AppSettings
@using TopicTalks.Web.Enums
@model TopicTalks.Web.Models.LoginVM

<div class="container mt-5">
    <div class="container-div" style="max-width: 430px;">
        <h2 class="mb-4 text-center">Login</h2>

        <form id="login-form">
            <div class="form-group mb-3">
                <label asp-for="Email">Email Address</label>
                <input id="emailInput" asp-for="Email" name="email" class="form-control" placeholder="Enter your email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Password">Password</label>
                <input asp-for="Password" type="password" name="password" class="form-control" placeholder="Enter your password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div id="role" class="form-group mb-2">
                <label asp-for="Role">Role</label>
                <select asp-for="Role" name="role" class="form-control">
                    <option value="" selected disabled>Select a role...</option>
                    @foreach (var role in Enum.GetValues(typeof(RoleType)))
                    {
                        <option value="@role">@role</option>
                    }
                </select>
            </div>

            <div class="text-center pt-2">
                <button type="submit" class="btn btn-primary">Login</button>
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {

        $("#login-form").submit(function (event) {
            event.preventDefault();
        });

        $('#login-form').validate({
            rules: {
                email: {
                    required: true,
                    email: true,
                    minlength: 8
                },
                password: {
                    required: true,
                    minlength: 4
                },
                role: {
                    required: true
                }
            },
            messages: {
                Email: {
                    required: "Please enter your email address",
                    email: "Please enter a valid email address",
                    minlength: "Email must be at least 8 characters long"
                },
                Password: {
                    required: "Please enter your password",
                    minlength: "Password must be at least 4 characters long"
                },
                Role: {
                    required: "Please select a role"
                }
            },
            submitHandler: function (form) {
                $.ajax({
                    url: '@ApiBaseUrl/api/User/login',
                    type: 'POST',
                    contentType: 'application/json',
                    data: formToJson(form),
                    success: function (response) {
                        console.log(response);
                        toastMessageNext("Login Successful!", ToastType.Success);
                        // window.location.href = '/';
                    },
                    error: function (xhr) {
                        console.log(xhr.responseText);
                        if (xhr.status === 401) {
                            errorMessage = "Login failed. Please check your credentials and role selection.";
                            $('#role').after('<span class="text-danger d-block text-center">' + errorMessage + '</span>');
                        } else {
                            errorMessage = xhr.responseText || "Internal server error. Please try again later.";
                            toastMessage(errorMessage);
                        }
                    }
                });
            }
        });
    });
</script>
