@using TopicTalks.Web.Common
@model TopicTalks.Web.ViewModels.RegisterViewModel

<div class="container mt-5">
    <div class="content-container" style="max-width: 430px;">
        <h2 class="mb-4 text-center title">Registration</h2>
        <form id="registration" asp-controller="Account" asp-action="Register" method="post">
            <div class="mb-3">
                <label for="image" class="form-label mb-0">Profile Picture</label>
                <div class="image-input">
                    <img id="preview-image" style="display: none;" alt="">
                    <input class="form-control" type="file" id="image" name="image" accept="image/*">
                    <img src="img/rolling.svg" id="profile-pic-loading" alt="" />
                    <label id="image-label" for="image">Choose an image</label>
                </div>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Username">Username</label>
                <input asp-for="Username" class="form-control" placeholder="Enter your username" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Email">Email Address</label>
                <input asp-for="Email" class="form-control" placeholder="Enter your email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Password">Password</label>
                <input asp-for="Password" type="password" class="form-control" placeholder="Enter your password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="ConfirmPassword">Confirm Password</label>
                <input asp-for="ConfirmPassword" type="password" class="form-control" placeholder="Confirm your password" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div id="additional-fields"></div>
            <div class="form-group mb-2">
                <label asp-for="Role">Role</label>
                <select id="Role" asp-for="Role" class="form-control">
                    <option value="" selected disabled>Select a role...</option>
                    @foreach (var role in Enum.GetValues(typeof(RoleType)))
                    {
                        <option value="@role">@role</option>
                    }
                </select>
            </div>
            <div class="text-center pt-2">
                <button type="submit" id="register" class="btn btn-primary">
                    <img src="img/rolling-white.svg" id="register-btn-loading" alt="" />
                    Register
                </button>
                <div class="mt-3">
                    Already have an account? <a asp-action="Login" class="link">Login</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
        $.validator.setDefaults({
            onkeyup: () => (element) => {
                if ($("#Username")[0] === element || $("#Email")[0] === element) {
                    return false;
                }
            }
        })

        var imageFileId;
        var uploading = false;
        var submitWaiting = false;

        $('#image').on("change", function () {
            $('#image').css({ "pointer-events": "none" });
            uploading = true;

            Upload(this)
                .then((response) => {
                    console.table(response)
                    imageFileId = response.cloudFileId;
                })
                .catch(() => {
                    imageFileId = null;
                })
                .finally(() => {
                    uploading = false;
                    $('#profile-pic-loading').hide();
                    $('#image').css({ "pointer-events": "auto" });

                    if (submitWaiting) {
                        $("#registration").valid() && $("#registration").trigger("submit");
                    }
                });
        });

        $("#registration").validate({
            rules: {
                Username: {
                    required: true,
                    minlength: 3,
                    maxlength: 20,
                    remote: {
                        url: "@Url.Action("CheckUserExists", "Account")",
                        type: "post",
                        data: { username: () => $("#Username").val() },
                        dataFilter: (response) => !JSON.parse(response).exists
                    }
                },
                Email: {
                    required: true,
                    email: true,
                    remote: {
                        url: "@Url.Action("CheckUserExists", "Account")",
                        type: "post",
                        data: { email: () => $("#Email").val() },
                        dataFilter: (response) => !JSON.parse(response).exists
                    }
                },
                Password: {
                    required: true,
                    minlength: 4,
                    maxlength: 20,
                    onkeyup: false
                },
                ConfirmPassword: {
                    required: true,
                    equalTo: "#Password"
                },
                Role: {
                    required: true
                },
                "UserDetails.Name": {
                    required: {
                        depends: () => $("#Role").val() === "Student"
                    },
                    minlength: 3,
                    maxlength: 50
                },
                "UserDetails.InstituteName": {
                    required: {
                        depends: () => $("#Role").val() === "Student"
                    },
                    minlength: 3,
                    maxlength: 50
                },
                "UserDetails.IdCardNumber": {
                    required: {
                        depends: () => $("#Role").val() === "Student"
                    },
                    minlength: 6,
                    maxlength: 20
                },
            },
            messages: {
                Username: {
                    required: "Please enter a username",
                    minlength: "Your username must be at least 3 characters long",
                    maxlength: "Your username must not exceed 20 characters",
                    remote: "Username is already taken"
                },
                Email: {
                    required: "Please enter your email address",
                    email: "Please enter a valid email address",
                    remote: "Email already exists"
                },
                Password: {
                    required: "Please enter a password",
                    minlength: "Your password must be at least 4 characters long",
                    maxlength: "Your password must not exceed 20 characters"
                },
                ConfirmPassword: {
                    required: "Please confirm your password",
                    equalTo: "Passwords do not match"
                },
                Role: {
                    required: "Please select a role"
                },
                "UserDetails.Name": {
                    required: "Please enter your name"
                },
                "UserDetails.InstituteName": {
                    required: "Please enter your institute name"
                },
                "UserDetails.IdCardNumber": {
                    required: "Please enter your ID card number"
                }
            },
            submitHandler: (form) => {
                $('#register-btn-loading').show();

                if (uploading == true) {
                    submitWaiting = true;
                    $('#register').css({ "pointer-events": "none" });
                    return;
                }

                var data = $(form).serializeArray().reduce((obj, item) => {
                    obj[item.name] = item.value;
                    return obj;
                }, {});

                if (imageFileId) {
                    data.ImageFileId = imageFileId;
                }

                $.ajax({
                    url: '@Url.Action("Register", "Account")',
                    type: 'POST',
                    data: data,
                    success: () => {
                        toastMessageNext("Registration Successful! Verification code has been sent to your email address.", ToastType.Success);
                        window.location.href = '@Url.Action("Verify", "Account", new { otpSent = true })';
                    },
                    error: (xhr) => {
                        if (xhr.status == 409) {
                            toastMessage("User with the provided username or email already exists.");
                        } else if (xhr.status === 400) {
                            toastMessage("Please fill out all the fields properly.");
                        } else {
                            toastMessage("Internal server error. Please try again later.");
                        }
                    }
                });

                $('#register').css({ "pointer-events": "auto" });
                $('#register-btn-loading').hide();
            }
        });

        $('#Role').on("change", function () {
            var selectedRole = $(this).val();

            if (selectedRole === "Student") {
                $("#additional-fields").load('@Url.Action("LoadAdditionalFields", "Account")');
            } else {
                $("#additional-fields").html("");
            }
        });
    </script>
}
